cpu.max = 2
mem.max = 6000

keyfields = openmlid:int(5), seed:int(3), datapreprocessor:varchar(100), featurepreprocessor:varchar(100), predictor:varchar(100), hpo:boolean
resultfields = chosendatapreprocessor:varchar(1000), chosenfeaturepreprocessor:varchar(1000), chosenpredictor:varchar(1000), metric:double, history:text

ignore.time = .*
ignore.memory = .*

openmlid = 1485, 1590, 1515, 1457, 1475, 1468, 1486, 1489, 23512, 23517, 4541, 4534, 4538, 4134, 4135, 40978, 40996, 41027, 40981, 40982, 40983, 40984, 40701, 40670, 40685, 40900,  1111, 42732, 42733, 42734, 40498, 41161, 41162, 41163, 41164, 41165, 41166, 41167, 41168, 41169, 41142, 41143, 41144, 41145, 41146, 41147, 41150, 41156, 41157, 41158,  41159, 41138, 54, 181, 188, 1461, 1494, 1464, 12, 23, 3, 1487, 40668, 1067, 1049, 40975, 31
seed = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
datapreprocessor = None, sklearn.preprocessing.MinMaxScaler, sklearn.preprocessing.Normalizer, sklearn.preprocessing.PowerTransformer, sklearn.preprocessing.QuantileTransformer, sklearn.preprocessing.RobustScaler, sklearn.preprocessing.StandardScaler, sklearn.feature_selection._variance_threshold.VarianceThreshold
featurepreprocessor = None, sklearn.decomposition.FastICA, sklearn.cluster.FeatureAgglomeration, sklearn.decomposition.KernelPCA, sklearn.kernel_approximation.RBFSampler, sklearn.kernel_approximation.Nystroem, sklearn.decomposition.PCA, sklearn.preprocessing.PolynomialFeatures, sklearn.feature_selection.SelectPercentile, sklearn.feature_selection.GenericUnivariateSelect
predictor = sklearn.naive_bayes.BernoulliNB, sklearn.tree.DecisionTreeClassifier, sklearn.ensemble.ExtraTreesClassifier, sklearn.naive_bayes.GaussianNB, sklearn.ensemble.GradientBoostingClassifier, sklearn.neighbors.KNeighborsClassifier, sklearn.discriminant_analysis.LinearDiscriminantAnalysis, sklearn.svm.SVC_linear, sklearn.svm.SVC_rbf, sklearn.svm.SVC_poly, sklearn.svm.SVC_sigmoid, sklearn.neural_network.MLPClassifier, sklearn.naive_bayes.MultinomialNB, sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis, sklearn.ensemble.RandomForestClassifier
hpo = 0, 1